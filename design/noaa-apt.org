#+TITLE:     NOAA APT 137MHz LNA and Filter Design
#+AUTHOR:    Jeremy Reeve
#+EMAIL:     jree042@aucklanduni.ac.nz
#+OPTIONS: ':nil *:t -:t ::t <:t H:3 \n:nil ^:t arch:headline
#+OPTIONS: author:t broken-links:nil c:nil creator:nil
#+OPTIONS: d:(not "LOGBOOK") date:t e:t email:nil f:t inline:t num:t
#+OPTIONS: p:nil pri:nil prop:nil stat:t tags:t tasks:t tex:t
#+OPTIONS: timestamp:t title:t toc:nil todo:t |:t
#+LANGUAGE: en
#+SELECT_TAGS: export
#+EXCLUDE_TAGS: noexport
#+CREATOR: Emacs 25.1.1 (Org mode 9.0.5)
#+OPTIONS: html-link-use-abs-url:nil html-postamble:auto
#+OPTIONS: html-preamble:t html-scripts:t html-style:t
#+OPTIONS: html5-fancy:nil tex:t
#+HTML_DOCTYPE: xhtml-strict
#+HTML_CONTAINER: div
#+DESCRIPTION:
#+KEYWORDS:
#+HTML_LINK_HOME:
#+HTML_LINK_UP:
#+HTML_MATHJAX:uuuu
#+HTML_HEAD:
#+HTML_HEAD_EXTRA:
#+SUBTITLE:
#+INFOJS_OPT:
#+CREATOR: <a href="http://www.gnu.org/software/emacs/">Emacs</a> 25.1.1 (<a href="http://orgmode.org">Org</a> mode 9.0.5)
#+LATEX_HEADER:
#+LATEX_CLASS: article
#+LATEX_CLASS_OPTIONS:
#+LATEX_HEADER:
#+LATEX_HEADER_EXTRA: \usepackage{svg}
#+LATEX_HEADER_EXTRA: \usepackage{amsmath, amssymb}
#+LATEX_HEADER_EXTRA: \usepackage{bm}
#+LATEX_HEADER_EXTRA: \DeclareRobustCommand{\bbone}{\text{\usefont{U}{bbold}{m}{n}1}}
#+LATEX_HEADER_EXTRA: \DeclareMathOperator{\EX}{\mathrm{E}}% expected value
#+LATEX_HEADER_EXTRA: \DeclareMathOperator{\Var}{\mathrm{Var}}% variance value
#+LATEX_HEADER_EXTRA: \DeclareMathOperator{\Cov}{\mathrm{Cov}}% covariance value
#+LATEX_HEADER_EXTRA: \newcommand{\distas}{\sim}%
#+DESCRIPTION:
#+KEYWORDS:
#+SUBTITLE:
#+LATEX_COMPILER: pdflatex
#+DATE: \today
#+STARTUP: showall indent
#+STARTUP: hidestars
#+STARTUP: latexpreview
#+BEGIN_EXPORT html
---
layout: page
category : design
tagline: "NOAA APT 137MHz LNA and Filter Design"
tags : [lna, filter, noaa, apt]
---
{% include JB/setup %}
#+END_EXPORT

#+BEGIN_SRC python :noweb yes :tangle lna_design.py :exports none
#!/usr/bin/env python

"""
lna_design.py: 

	Copyright (c) 2018 Jeremy Reeve <jree042@aucklanduni.ac.nz>


"""

<<lna-design-main-imports>>

<<lna-design-imports>>

<<lna-design-authorship>>

# constants
<<lna-design-constants>>

# globals
<<lna-design-globals>>

# exception classes

# interface functions

# classes
<<lna-design-defn>>

# internal functions & classes

<<lna-design-constants>>

<<lna-design-compute-approx-snr-earth-surface>>

<<lna-design-main>>

<<lna-design-call-main>>
#+END_SRC

#+NAME: lna-design-authorship
#+BEGIN_SRC python :exports none
__author__ = "Jeremy Reeve"
__copyright__ = "Copyright 2018, Jeremy Reeve"
__credits__ = ["Jeremy Reeve"]
__license__ = "Murky"
__version__ = "1.0.1"
__maintainer__ = "Jeremy Reeve"
__email__ = "jree042@aucklanduni.ac.nz"
__status__ = "Prototype"
#+END_SRC


#+NAME: lna-design-imports
#+BEGIN_SRC python :exports none
  from argparse import ArgumentParser

  import logging
  import os
  import sys

  import astropy as ap
  from astropy import units as u
  import hapi as hapi
  import matplotlib.pyplot as plt
  import mpl_toolkits.mplot3d.axes3d as axes3d
  import numpy as np
  import scipy.integrate
  import scipy.optimize
#+END_SRC


#+NAME: lna-design-main
#+BEGIN_SRC python :exports none

  def main():
      compute_approx_snr_earth_surface()

#+END_SRC



#+NAME: lna-design-call-main
#+BEGIN_SRC python :exports none
if __name__ == '__main__':
    status = main()
    sys.exit(status)
#+END_SRC



#+NAME: lna-design-constants
#+BEGIN_SRC python :exports none

CONST_C = 299792458
"""float: c (ms^1), universal physical constant for speed of light in a vacuum.

"""

CONST_K = 1.38064852e-23
"""float: k (J K^-1), Boltzmann constant.

"""

CONST_HBAR = 1.054571800e-34
"""float: \hbar (J s), Reduced Planck constant.

"""

CONST_H = 6.626070040e-34
"""float: h (J s), Planck constant.

"""

CONST_ROOM_TEMP = 298
"""int: T_25 (K), Room temperature in Kelvin.

"""

CONST_MU_0 = 1.2566370614e-6
"""float: \mu_0 (H m^{-1}), Permeability of free space 

"""

DEBUG_LOG = False
"""bool: DEBUG_LOG , switch on verbose logging."""

#+END_SRC


#+NAME: lna-design-compute-wv-absorption-spectrum
#+BEGIN_SRC python :results value scalar raw replace

  class LinkBudget(object):
      F    = 137.0e6
      LAMBDA = CONST_C / F
      P_TX = 37.0   # transmitter output power (dBm)
		    # lump everything here as we know an ERP only
      G_TX = 0.0    # transmitter antenna gain
      L_TX = 0.0    # transmitter losses
      L_FS = 0.0    # free-space path loss
      L_M  = 0.0    # miscellaneous losses
      G_RX = 0.0    # receiver antenna gain (a range for off-axis of our QFH antenna)
      L_RX = 0.0    # receiver losses

      def l_fs(d, lambda_0):

	  L_FS = 20 * np.log10(4 * np.pi * d / lambda_0)

	  return L_FS
    
    
      def p_rx():

	  P_RX = P_TX + G_TX + L_TX \
	    + L_FS + L_M + G_RX + L_RX 
    
	  return P_RX

    
  def compute_snr_earth_surface():



      print(len(nu2))
      # Plot a figure
      fig, (ax1, ax2) = plt.subplots(2, 1, sharex=False, sharey=False)

      ax1.plot(nu, coef)
      ax1.set(xlabel='wavenumber (cm^{-1})', ylabel='absorption coefficient',
	     title='Absorption spectrum')
      ax1.grid()

      ax2.plot(nu2, coef2)
      ax2.set(xlabel='wavenumber (cm^{-1})', ylabel='absorption coefficient')
      ax2.grid()

      fig.savefig("question1.png")
      plt.show()

      return "Result: {0}".format(np.max(result_int.y[0] - I))

#+END_SRC


* Atmospheric water vapour properties

 0.718 μm (visible): α, 0.810 μm: μ, 0.935 μm: ρστ, 1.13 μm: φ, 1.38 μm: ψ, 1.88 μm: Ω, 2.68 μm: X


0.718 μm (visible): α, 0.810 μm: μ, 0.935 μm: ρστ, 1.13 μm: φ, 1.38 μm: ψ, 1.88 μm: Ω, 2.68 μm: X

